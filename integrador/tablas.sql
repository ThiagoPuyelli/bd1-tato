/*
INSTRUMENTO(nombre)
  PK(nombre)
*/
CREATE TABLE INSTRUMENTO (
    NOMBRE DOM_DESCRIPCION,
    CONSTRAINT PK_INSTRUMENTO PRIMARY KEY (NOMBRE)
);
/*
ARTISTA(id_art, nombre, descripcion, tipo)
  PK(id_art)
*/
CREATE TABLE ARTISTA (
    ID_ART DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    DESCRIPCION DOM_DESCRIPCION,
    TIPO CHAR(1) CHECK(TIPO = 'b' OR TIPO = 's') NOT NULL,
    CONSTRAINT PK_ARTISTA PRIMARY KEY (ID_ART)
);
/*
INTEGRANTE(proyecto, musico, fecha_fin, fecha_inicio)
  PK(proyecto, musico, fecha_inicio)
  FK(integrante, proyecto, ARTISTA)
*/
CREATE TABLE INTEGRANTE (
    PROYECTO DOM_NRO,
    MUSICO DOM_NRO,
    FECHA_FIN DATE,
    FECHA_INICIO DATE DEFAULT CURRENT_DATE NOT NULL,
    CONSTRAINT PK_INTEGRANTE PRIMARY KEY (PROYECTO, MUSICO, FECHA_INICIO),
    CONSTRAINT FK_INTEGRANTE_PROYECTO FOREIGN KEY (PROYECTO) REFERENCES ARTISTA(ID_ART) ON UPDATE CASCADE,
    CONSTRAINT FK_INTEGRANTE_MUSICO FOREIGN KEY (MUSICO) REFERENCES ARTISTA(ID_ART) ON UPDATE CASCADE
);
/*
QUETOCA(nombre, proyecto, musico, fecha_inicio)
  PK(nombre, proyecto, musico, fecha_inicio)
  FK(nombre, INSTRUMENTO)
  FK(musico, proyecto, fecha_inicio, INTEGRANTE)
*/
CREATE TABLE QUETOCA (
    NOMBRE DOM_DESCRIPCION,
    PROYECTO DOM_NRO,
    MUSICO DOM_NRO,
    FECHA_INICIO DATE DEFAULT CURRENT_DATE NOT NULL,
    CONSTRAINT PK_QUETOCA PRIMARY KEY (NOMBRE, PROYECTO, MUSICO, FECHA_INICIO),
    CONSTRAINT FK_QUETOCA_INSTRUMENTO FOREIGN KEY (NOMBRE) REFERENCES INSTRUMENTO(NOMBRE) ON UPDATE CASCADE,
    CONSTRAINT FK_QUETOCA_INTEGRANTE FOREIGN KEY (PROYECTO, MUSICO, FECHA_INICIO) REFERENCES INTEGRANTE(PROYECTO, MUSICO, FECHA_INICIO) ON UPDATE CASCADE
);
/*
GENERO(nombre) 
  PK(nombre)
*/
CREATE TABLE GENERO (
    NOMBRE DOM_DESCRIPCION,
    CONSTRAINT PK_GENERO PRIMARY KEY (NOMBRE)
);
/*
ALBUM(id_alb, nombre, fecha_lanzamiento, duracion, id_art)
  PK(id_alb)
  FK(id_art, ARTISTA)
*/
CREATE TABLE ALBUM (
    ID_ALB DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    DURACION INTEGER DEFAULT 0 CHECK(DURACION >= 0) NOT NULL,
    FECHA_LANZAMIENTO DATE DEFAULT CURRENT_DATE NOT NULL,
    ID_ART DOM_NRO,
    CONSTRAINT PK_ALBUM PRIMARY KEY (ID_ALB),
    CONSTRAINT FK_ALBUM_ARTISTA FOREIGN KEY (ID_ART) REFERENCES ARTISTA(ID_ART) ON UPDATE CASCADE
);
/*
TIPO(id_alb, nombre)
  PK(id_alb, nombre)
  FK(nombre, GENERO)
  FK(id_alb, ALBUM)
*/
CREATE TABLE TIPO (
    ID_ALB DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    CONSTRAINT PK_TIPO PRIMARY KEY (ID_ALB),
    CONSTRAINT FK_TIPO_ALBUM FOREIGN KEY (ID_ALB) REFERENCES ALBUM(ID_ALB) ON UPDATE CASCADE,
    CONSTRAINT FK_TIPO_GENERO FOREIGN KEY (NOMBRE) REFERENCES GENERO(NOMBRE) ON UPDATE CASCADE
);
/*
CANCION(id_can, nombre, duracion, id_alb)
  PK(id_can)
  FK(id_alb, ALBUM)
*/
CREATE TABLE CANCION (
    ID_CAN DOM_NRO,
    ID_ALB DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    DURACION INTEGER DEFAULT 0 CHECK(DURACION >= 0) NOT NULL,
    CONSTRAINT PK_CANCION PRIMARY KEY (ID_CAN),
    CONSTRAINT FK_CANCION_ALBUM FOREIGN KEY (ID_ALB) REFERENCES ALBUM(ID_ALB) ON UPDATE CASCADE
);
/*
USUARIO(id_us, nombre, apellido, email)
  PK(id_us)
*/
CREATE TABLE USUARIO (
    ID_US DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    APELLIDO DOM_DESCRIPCION,
    EMAIL DOM_DESCRIPCION,
    CONSTRAINT PK_USUARIO PRIMARY KEY (ID_US),
    CONSTRAINT UN_EMAIL UNIQUE (EMAIL)
);
/*
GUSTA(id_us, id_can)
  PK(id_us, id_can)
  FK(id_us, USUARIO)
  FK(id_can, CANCION)
*/
CREATE TABLE GUSTA (
    ID_US DOM_NRO,
    ID_CAN DOM_NRO,
    CONSTRAINT PK_GUSTA PRIMARY KEY (ID_US, ID_CAN),
    CONSTRAINT FK_GUSTA_CANCION FOREIGN KEY (ID_CAN) REFERENCES CANCION(ID_CAN) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_GUSTA_USUARIO FOREIGN KEY (ID_US) REFERENCES USUARIO(ID_US) ON DELETE CASCADE ON UPDATE CASCADE
);
/*
ESCUCHA(id_us, id_can, fecha_hora)
  PK(id_us, id_can, fecha_hora)
  FK(id_us, USUARIO)
  FK(id_can, CANCION)
*/
CREATE TABLE ESCUCHA (
    ID_US DOM_NRO,
    ID_CAN DOM_NRO,
    FECHA_HORA TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    CONSTRAINT PK_ESCUCHA PRIMARY KEY (ID_US, ID_CAN, FECHA_HORA),
    CONSTRAINT FK_ESCUCHA_CANCION FOREIGN KEY (ID_CAN) REFERENCES CANCION(ID_CAN) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ESCUCHA_USUARIO FOREIGN KEY (ID_US) REFERENCES USUARIO(ID_US) ON DELETE CASCADE ON UPDATE CASCADE
);
/*
PLAYLIST(nombre, duracion, id_us)
  PK(nombre, id_us)
  FK(id_us, USUARIO)
*/
CREATE TABLE PLAYLIST (
    ID_US DOM_NRO,
    DURACION INTEGER DEFAULT 0 CHECK(DURACION >= 0) NOT NULL,
    NOMBRE DOM_DESCRIPCION,
    CONSTRAINT PK_PLAYLIST PRIMARY KEY (ID_US, NOMBRE),
    CONSTRAINT FK_PLAYLIST_USUARIO FOREIGN KEY (ID_US) REFERENCES USUARIO(ID_US) ON DELETE CASCADE ON UPDATE CASCADE
);
/*
CONTIENE(id_us, nombre, id_can)
  PK(id_us, nombre, id_can)
  FK(id_ can, CANCION)
  FK(id_us, nombre, PLAYLIST)
*/
CREATE TABLE CONTIENE (
    ID_US DOM_NRO,
    ID_CAN DOM_NRO,
    NOMBRE DOM_DESCRIPCION,
    CONSTRAINT PK_CONTIENE PRIMARY KEY (ID_US, ID_CAN, NOMBRE),
    CONSTRAINT FK_CONTIENE_PLAYLIST FOREIGN KEY (ID_US, NOMBRE) REFERENCES PLAYLIST(ID_US, NOMBRE) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CONTIENE_CANCION FOREIGN KEY (ID_CAN) REFERENCES CANCION(ID_CAN) ON DELETE CASCADE ON UPDATE CASCADE
);